<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.min</groupId>
  <artifactId>core</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>core Maven Webapp</name>
  <description>Spring Mvc Servlet 3.0</description>
  <url>http://maven.apache.org</url>
  
  <!-- 配置信息 -->
  <properties>
		<!-- 指明使用utf-8编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 指明使用JDK版本 -->
		<project.build.targetJDK>1.7</project.build.targetJDK>
		<!-- Spring版本号 -->
		<spring.version>4.1.4.RELEASE</spring.version>
		<!-- Aspectjrt 切片配置 -->
		<aspectjrt.version>1.7.1</aspectjrt.version>
		<!-- 指定Servlet版本 -->
		<servlet.version>3.0</servlet.version>
		<!-- Servlet版本 -->
		<jstl.version>1.2</jstl.version>
		<!-- JSP版本 -->
		<jsp.version>2.0</jsp.version>
		<!-- 阿里巴巴数据源版本 -->
		<druid.version>1.0.15</druid.version>
		<!-- 阿里巴巴fastjson版本 -->
		<fastjson.version>1.2.7</fastjson.version>
		<!-- JPA的版本 -->
		<javax.persistence.version>2.1.0</javax.persistence.version>
		<!-- 数据库驱动 -->
		<mysql-connector.version>5.1.29</mysql-connector.version>
		<!-- MyBatis 版本 -->
		<mybatis.version>3.2.4</mybatis.version>
		<!-- MyBatis Spring的版本 -->
		<mybatis-spring.version>1.2.2</mybatis-spring.version>
		<!-- MyBatis分页插件，实现MyBatis数据真分页 -->
		<pagehelper.version>3.7.2</pagehelper.version>
		<jsqlparser.version>0.9.3</jsqlparser.version>
		<!-- Inject版本信息 -->
		<inject.version>1</inject.version>
		<!-- log4j日志文件管理包版本 -->
		<slf4j.version>1.7.12</slf4j.version>
		<logback.version>1.1.3</logback.version>
		<log4jdbc.version>1.2</log4jdbc.version>
		<!-- Java validation API 版本 -->
		<javax.version>1.1.0.Final</javax.version>
		<!-- IO包的版本 -->
		<commons-io.version>2.4</commons-io.version>
		<commons-fileupload.version>1.3</commons-fileupload.version>
		<!-- javamelody 版本 weblogic，tomcat服务监控 -->
		<javamelody.version>1.56.0</javamelody.version>
		<!-- Junit的版本 -->
		<junit.version>4.3</junit.version>
		<!-- Tomcat7-Maven-Plugin 版本 -->
		<tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>	
  </properties>
  
  
  
  <!-- jar package -->
  <dependencies>
		<!-- JPA的支持jar包 -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>${javax.persistence.version}</version>
		</dependency>
		<!-- 加入Spring的核心jar -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectjrt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjrt.version}</version>
		</dependency>
		<!-- mysql驱动包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector.version}</version>
		</dependency>
		<!-- 阿里巴巴数据源包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<!-- mybatis核心包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!-- mybatis/spring整合包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency>
		<!-- MyBatis分页插件 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>${pagehelper.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.jsqlparser</groupId>
			<artifactId>jsqlparser</artifactId>
			<version>${jsqlparser.version}</version>
		</dependency>
		<!-- 日志文件管理包 -->
		<!--******** logback and slf4j ******** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!--**************** logback and slf4j **************** -->
		<!-- 这个包用于显示真实执行的sql -->
		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>${log4jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${inject.version}</version>
		</dependency>
		<!-- Servlet 配置 -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- 加入jstl依赖包 -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<!-- 加入fastjson依赖包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<!-- 加入javamelody依赖包 -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>${javamelody.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>  
  </dependencies>


	<build>
		<finalName>core</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<!-- 是否替换资源中的属性 -->
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- 编译的时候使用JDK7和UTF8编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${project.build.targetJDK}</source>
					<target>${project.build.targetJDK}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- 将源码打成jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 编译jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- 打包war包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- 配置好tomcat-maven-plugin插件 -->
			<!-- 第一种方式: apache官方tomcat插件,支持 deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat7-maven-plugin.version}</version>
				<configuration>
					<path>/</path>
					<port>8181</port>
					<uriEncoding>${project.build.sourceEncoding}</uriEncoding>
					<!-- 本地Tomcat -->
					<url>http://localhost:8181/manager/text</url>
					<server>tomcat7</server>
					<!-- 远程Tomcat -->
					<!-- <url>http://180.76.143.234:8181/manager/text</url> <server>remote-tomcat</server> -->
					<contextReloadable>true</contextReloadable>
				</configuration>
			</plugin>
			<!-- 使用org.codehaus.mojo的tomcat插件调用时使用mvn tomcat:run -->
			<!-- 第二种方式: 第三方tomcat插件,支持 redeploy -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<path>/</path>
					<port>8181</port>
					<uriEncoding>${project.build.sourceEncoding}</uriEncoding>
					<!-- 本地Tomcat -->
					<url>http://localhost:8181/manager/text</url>
					<server>tomcat7</server>
					<!-- 远程Tomcat -->
					<!-- <url>http://180.76.143.234:8181/manager/text</url> <server>remote-tomcat</server> -->
					<ignorePackaging>true</ignorePackaging>
				</configuration>
			</plugin>
			<!-- 在Debug中配置tomcat7:run表示能正常的Debug，如果是使用tomcat7:redeploy表示重新部署tomcat7:undeploy， -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sysdeo-tomcat-maven-plugin</artifactId>
				<version>1.1</version>
			</plugin>
			<!-- mvn sysdeo-tomcat:generate -->
		</plugins>		
	</build>
</project>
